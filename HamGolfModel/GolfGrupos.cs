//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HamDataModel
{
    using HamDataTransactions;
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;

    public partial class GolfGrupos
    {
        #region Propiedades
        public int GrupoId { get; set; }
        public string Descripcion { get; set; }
        #endregion

        #region Metodos DML
        public int Save()
        {
            string procedimiento;
            List<SqlParameter> ps = new List<SqlParameter>();
            if (GrupoId == 0)
            {
                procedimiento = "[golf].[pInsGrupo]";
            }
            else
            {
                procedimiento = "[golf].[pUpdateGrupo]";
                ps.Add(new SqlParameter("GrupoId", GrupoId));
            }
            ps.Add(new SqlParameter("Descripcion", Descripcion));
            return insertUpdate(procedimiento, ps);
        }

        public static bool Delete(int grupoId)
        {
            DBTransaction db = new DBTransaction();
            List<SqlParameter> ps = new List<SqlParameter>();
            ps.Add(new SqlParameter("GrupoId", grupoId));
            db.ExecStoreProcedure("[golf].[pDeleteGrupo]", ps);
            return (db.RowAffected > 0);
        }

        public static DataTable GetGrupoPersonas(string  Fecha, int JornadaId, int CategoriaId)
        {
            DataTable lg = new DataTable();
            List<SqlParameter> lp = new List<SqlParameter>();
            lp.Add(new SqlParameter("Fecha",Convert.ToDateTime( Fecha).ToString("yyyy-MM-dd")));
            lp.Add(new SqlParameter("JornadaId", JornadaId));
            lp.Add(new SqlParameter("CategoriaId", CategoriaId));
            DataTable dt = ExecuteTransaction("[golf].[pGetGrupoPersonas]", lp);
            
            return dt;
        }
        private static DataTable ExecuteTransaction(string procedureName, List<SqlParameter> ps)
        {
            DBTransaction db = new DBTransaction();
            DataTable dt = db.GetStoreProcedure(procedureName, ps);
            return dt;
        }
        #endregion

        #region Metodos GET

        public static DataTable GetJugadores(int grupoId)
        {
            DBTransaction db = new DBTransaction();
            DataTable dt = db.GetDataView(string.Format("[golf].[vGetCompetidorJornada] where [GrupoId] = {0}", grupoId));
            return dt;
        }
        #endregion

        #region Private Members
        private int insertUpdate(string procedimiento, List<SqlParameter> ps)
        {
            DBTransaction db = new DBTransaction();
            DataTable dt = db.GetStoreProcedure(procedimiento, ps);
            if (dt.Rows.Count > 0)
            {
                return Convert.ToInt32(dt.Rows[0][0]);
            }
            else
            {
                return 0;
            }
        }
        #endregion
    }
}
